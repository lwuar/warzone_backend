{
  "swagger": "2.0",
  "info": {
    "title": "Warzone APP Backend API",
    "description": "API for COMP 4521 Warzone APP",
    "version": "1.0.0"
  },
  "host": "125.59.138.87:8090",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/basic/login": {
      "post": {
        "tags": [
          "Basic"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow user login on mobile phone. A Json Web Token is stored in cookie as an access token for authentication. Life time of token is set to 1 day",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "user1"
                },
                "pw_cipher": {
                  "type": "string",
                  "example": "Abcd1234"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/basic/register": {
      "post": {
        "tags": [
          "Basic"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow user to register.",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "user1"
                },
                "pw_cipher": {
                  "type": "string",
                  "example": "Abcd1234"
                },
                "nickname": {
                  "type": "string",
                  "example": "user1Nickname"
                },
                "account_level": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/basic/getProfile": {
      "get": {
        "tags": [
          "Basic"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/basic/updateProfile": {
      "put": {
        "tags": [
          "Basic"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Update user profile information, which are the username, the nickname and the account level. All these attributes are optional",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "newuser1"
                },
                "nickname": {
                  "type": "string",
                  "example": "newuser1Nickname"
                },
                "account_level": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/basic/updatePassword": {
      "put": {
        "tags": [
          "Basic"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow user to update password. Authentication is done by JWT",
            "schema": {
              "type": "object",
              "properties": {
                "new_cipher": {
                  "type": "string",
                  "example": "newAbcd1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/writeOwnBlog": {
      "post": {
        "tags": [
          "Blog Others"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow users to write their own new blog. comment_bid is optional. If not null, then it is a comment to other blog. blog_info is the content of blog. TODO: Location need to be confirmed with Map developer",
            "schema": {
              "type": "object",
              "properties": {
                "comment_bid": {
                  "type": "string",
                  "example": "user1"
                },
                "blog_info": {
                  "type": "string",
                  "example": "Abcd1234"
                },
                "blog_location": {
                  "type": "string",
                  "example": "clear water bay, hk"
                },
                "blog_type": {
                  "type": "string",
                  "example": "0"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/readOwnBlog": {
      "get": {
        "tags": [
          "Blog Read"
        ],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/readPublicBlog": {
      "get": {
        "tags": [
          "Blog Read"
        ],
        "description": "",
        "parameters": [
          {
            "name": "author_uid",
            "in": "query",
            "type": "string"
          },
          {
            "name": "comment_bid",
            "in": "query",
            "type": "string"
          },
          {
            "name": "blog_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/readBlogTree": {
      "get": {
        "tags": [
          "Blog Read"
        ],
        "description": "",
        "parameters": [
          {
            "name": "comment_bid",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/updateOwnBlog": {
      "put": {
        "tags": [
          "Blog Others"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow users to update their own blog. All are optional",
            "schema": {
              "type": "object",
              "properties": {
                "comment_bid": {
                  "type": "string",
                  "example": "5"
                },
                "blog_info": {
                  "type": "string",
                  "example": "Abcd1234"
                },
                "blog_location": {
                  "type": "string",
                  "example": "clear water bay, hk"
                },
                "blog_type": {
                  "type": "string",
                  "example": "1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/thumbsAddOnBlog": {
      "put": {
        "tags": [
          "Blog Thumb"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow user to thumb up or down for a blog or comment. bid is the corresponding id of blog. thumbsChange indicates the thumb, true for up and false for down. The total count of thumbs will be added or deducted by 1",
            "schema": {
              "type": "object",
              "properties": {
                "bid": {
                  "type": "number",
                  "example": 5
                },
                "thumbsChange": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/thumbsRemoveOnBlog": {
      "put": {
        "tags": [
          "Blog Thumb"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow user to remove their thumb up or down for a blog or comment. bid is the corresponding id of blog. The total count will be restored",
            "schema": {
              "type": "object",
              "properties": {
                "bid": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/blog/delete": {
      "delete": {
        "tags": [
          "Blog Others"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Allow user to delete their blog or comment. bid is the corresponding id of blog. However, once there is a comment, it may not be deleted now. TODO: Add recursive delete for this part",
            "schema": {
              "type": "object",
              "properties": {
                "bid": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}